{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ChatBot.com API Documentation","text":"<p>This is the un-official developer documentation of ChatBot.com API by Athar Kharal, PhD. It enables you to build, manage, and integrate intelligent chatbot systems. The API provides access to core features including stories, entities, conversations, and user management.</p>"},{"location":"#base-url","title":"Base URL","text":"<p>All API requests must target the following base URL:</p> <pre><code>https://api.chatbot.com/\n</code></pre>"},{"location":"#capabilities","title":"Capabilities","text":"<p>The API allows you to:</p> <ul> <li>Automate creation and deployment of chatbot logic.</li> <li>Retrieve and analyze chat transcripts.</li> <li>Manage user-defined entities.</li> <li>Integrate chatbot workflows into external applications.</li> <li>Monitor system behavior and diagnose integration issues.</li> </ul>"},{"location":"#documentation-structure","title":"Documentation Structure","text":"<p>The documentation is divided into the following sections:</p> <ul> <li>Getting Started \u2014 Authentication model, token acquisition, and initial setup.</li> <li>API \u2014 Endpoint definitions, request syntax, and response schemas.</li> <li>Reference \u2014 OpenAPI specification, status codes, and downloadable tools.</li> <li>Changelog \u2014 Version history and notable changes.</li> </ul> <p>Each section is structured to be concise, reproducible, and implementation-ready.</p>"},{"location":"#authorship-and-attribution","title":"Authorship and Attribution","text":"<p>This site was developed by Athar Kharal, PhD, as part of a professional initiative to model exemplary API documentation workflows using MkDocs, Postman, and automated CI/CD pipelines.</p> <p>The public GitHub repository is available at: https://github.com/atharkharal/chatbot-api-docs</p>"},{"location":"#postman-collection","title":"Postman Collection","text":"<p>You can interact with the API through the official Postman Collection, available at the following link:</p> <p>https://www.postman.com/chatbotcom/chatbot-com/collection/xs58e89/chatbot-com-api</p>"},{"location":"api/archives/","title":"Archives API","text":"<p>Access and manage archived conversations and session metadata. Use this endpoint to retrieve historical chat data, filter by date or user, and audit past interactions for analysis or compliance.</p>"},{"location":"api/archives/#endpoint-summary","title":"Endpoint Summary","text":"Method Endpoint Description GET <code>/v1/archives</code> List archived sessions GET <code>/v1/archives/{id}</code> Retrieve a specific archived session"},{"location":"api/archives/#get-v1archives","title":"GET /v1/archives","text":"<p>Retrieve a paginated list of archived chat sessions.</p>"},{"location":"api/archives/#query-parameters","title":"Query Parameters","text":"Name Type Required Description <code>user_id</code> string No Filter by specific user ID <code>from</code> date No Start date (ISO 8601) <code>to</code> date No End date (ISO 8601) <code>limit</code> integer No Max number of items (default: 50)"},{"location":"api/archives/#response","title":"Response","text":"<p>````json {   \"data\": [     {       \"id\": \"archive_7421\",       \"user_id\": \"user_231\",       \"created_at\": \"2024-10-03T14:23:15Z\",       \"messages\": 19     },     {       \"id\": \"archive_7422\",       \"user_id\": \"user_772\",       \"created_at\": \"2024-10-04T11:01:00Z\",       \"messages\": 44     }   ] }</p>"},{"location":"api/entities/","title":"Entities API","text":"<p>The Entities API enables CRUD operations on core business objects such as users, agents, bots, and custom data records. Use it to manage and inspect the domain-level entities that participate in conversations.</p>"},{"location":"api/entities/#endpoint-summary","title":"Endpoint Summary","text":"Method Endpoint Description GET <code>/v1/entities</code> List all entities POST <code>/v1/entities</code> Create a new entity GET <code>/v1/entities/{id}</code> Retrieve a specific entity PATCH <code>/v1/entities/{id}</code> Update an entity DELETE <code>/v1/entities/{id}</code> Delete an entity"},{"location":"api/entities/#get-v1entities","title":"GET /v1/entities","text":"<p>Retrieve a list of all registered entities in the system.</p>"},{"location":"api/entities/#query-parameters","title":"Query Parameters","text":"Name Type Required Description <code>type</code> string No Filter by type (e.g., <code>user</code>) <code>limit</code> integer No Items per page (default: 25)"},{"location":"api/entities/#response","title":"Response","text":"<p>````json {   \"data\": [     {       \"id\": \"ent_001\",       \"type\": \"user\",       \"name\": \"Ali\",       \"metadata\": {         \"email\": \"ali@example.com\",         \"subscription\": \"pro\"       }     },     {       \"id\": \"ent_002\",       \"type\": \"bot\",       \"name\": \"SupportBot\",       \"metadata\": {}     }   ] }</p>"},{"location":"getting-started/authentication/","title":"Authentication","text":"<p>All requests to the ChatBot.com API must be authenticated using a Bearer token. Unauthorized or improperly authenticated requests will return a <code>401 Unauthorized</code> error.</p>"},{"location":"getting-started/authentication/#base-url","title":"Base URL","text":"<pre><code>https://api.chatbot.com/v1/\n</code></pre>"},{"location":"getting-started/authentication/#authentication-method","title":"Authentication Method","text":"<p>The API uses Bearer Token Authentication. You must include your token in the <code>Authorization</code> header of each request.</p> <p>Header Format:</p> <pre><code>Authorization: Bearer YOUR_API_TOKEN\n</code></pre> <p>Tokens can be generated from your ChatBot.com dashboard.</p>"},{"location":"getting-started/authentication/#example-usage","title":"Example Usage","text":""},{"location":"getting-started/authentication/#curl","title":"cURL","text":"<pre><code>curl -X GET https://api.chatbot.com/v1/archives \\\n  -H \"Authorization: Bearer YOUR_API_TOKEN\"\n</code></pre>"},{"location":"getting-started/authentication/#python-requests","title":"Python (requests)","text":"<pre><code>import requests\n\nurl = \"https://api.chatbot.com/v1/archives\"\nheaders = {\n    \"Authorization\": \"Bearer YOUR_API_TOKEN\"\n}\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n</code></pre>"},{"location":"getting-started/authentication/#javascript-fetch","title":"JavaScript (fetch)","text":"<pre><code>fetch(\"https://api.chatbot.com/v1/archives\", {\n  headers: {\n    Authorization: \"Bearer YOUR_API_TOKEN\"\n  }\n})\n.then(response =&gt; response.json())\n.then(data =&gt; console.log(data));\n</code></pre>"},{"location":"getting-started/authentication/#r-httr","title":"R (httr)","text":"<pre><code>library(httr)\n\nurl &lt;- \"https://api.chatbot.com/v1/archives\"\nres &lt;- GET(url, add_headers(Authorization = \"Bearer YOUR_API_TOKEN\"))\ncontent(res)\n</code></pre>"},{"location":"getting-started/authentication/#token-management","title":"Token Management","text":"<ul> <li>Expiration: Tokens typically do not expire but can be revoked at any time from the dashboard.</li> <li>Scope: Each token is associated with the workspace that created it. Tokens cannot access resources outside their originating workspace.</li> <li>Security: Treat your token like a password. Do not expose it in public repositories or client-side code.</li> </ul>"},{"location":"getting-started/authentication/#errors","title":"Errors","text":"HTTP Code Message Description 401 Unauthorized Missing or invalid token 403 Forbidden Token lacks necessary permissions"},{"location":"getting-started/authentication/#best-practices","title":"Best Practices","text":"<ul> <li>Always use HTTPS to encrypt requests.</li> <li>Rotate tokens periodically and remove unused tokens.</li> <li>For browser-based applications, use a backend proxy to protect tokens.</li> </ul>"},{"location":"getting-started/authentication/#next-step","title":"Next Step","text":"<p>Once authenticated, you may proceed to interact with API resources such as: - Archives - Entities - Conversations</p>"},{"location":"reference/errors/","title":"Error Codes","text":"<p>The ChatBot.com API uses standard HTTP status codes to indicate success or failure. In addition, structured error responses provide more granular diagnostic information.</p>"},{"location":"reference/errors/#error-format","title":"Error Format","text":"<p>All error responses are returned in the following JSON format:</p> <pre><code>{\n  \"error\": {\n    \"code\": \"string\",\n    \"message\": \"string\",\n    \"status\": \"integer\",\n    \"details\": {\n      \"field\": \"string\",\n      \"reason\": \"string\"\n    }\n  }\n}\n</code></pre> Field Type Description <code>code</code> string Machine-readable error identifier <code>message</code> string Human-readable explanation <code>status</code> integer HTTP status code <code>details</code> object Additional context, often related to input validation"},{"location":"reference/errors/#common-error-codes","title":"Common Error Codes","text":"HTTP Code Error Code Meaning 400 <code>invalid_request</code> Malformed or missing parameters 401 <code>unauthorized</code> Authentication token missing or invalid 403 <code>forbidden</code> Authenticated but not permitted to access the resource 404 <code>not_found</code> Requested resource does not exist 409 <code>conflict</code> Resource conflict, e.g. duplicate entries 422 <code>unprocessable_entity</code> Semantically invalid input (e.g., incorrect data format) 429 <code>rate_limited</code> Exceeded API rate limit 500 <code>internal_error</code> Unexpected server-side error 503 <code>service_unavailable</code> API temporarily unavailable due to maintenance or overload"},{"location":"reference/errors/#example-unauthorized-request","title":"Example: Unauthorized Request","text":"<pre><code>GET /archives HTTP/1.1\nHost: api.chatbot.com\nAuthorization: Bearer invalid_token\n</code></pre> <p>Response</p> <pre><code>{\n  \"error\": {\n    \"code\": \"unauthorized\",\n    \"message\": \"Invalid or missing authentication token.\",\n    \"status\": 401\n  }\n}\n</code></pre>"},{"location":"reference/errors/#best-practices-for-error-handling","title":"Best Practices for Error Handling","text":"<ul> <li>Log the <code>code</code> and <code>status</code> for programmatic error handling.</li> <li>Display <code>message</code> to end-users for user-friendly error explanations.</li> <li>Retry on 429/503 with exponential backoff.</li> <li>Fail-fast on 400/422 unless user correction is possible.</li> </ul> <p>For full error schema definitions, consult the OpenAPI Spec.</p>"},{"location":"reference/openapi/","title":"OpenAPI Specification","text":"<p>This API conforms to the OpenAPI 3.1.0 specification. The OpenAPI document defines the structure, endpoints, parameters, responses, and data models used by the ChatBot.com API.</p>"},{"location":"reference/openapi/#overview","title":"Overview","text":"<p>The full OpenAPI specification for this API is available in JSON and YAML formats:</p> <ul> <li>Download OpenAPI (JSON)</li> <li>Download OpenAPI (YAML)</li> </ul> <p>You can also explore the API interactively using tools like:</p> <ul> <li>Swagger UI</li> <li>ReDoc</li> </ul>"},{"location":"reference/openapi/#versioning","title":"Versioning","text":"<p>This document reflects v1.0.0 of the ChatBot.com API. Changes to this specification follow semantic versioning principles.</p> <ul> <li>Major version: Incompatible API changes</li> <li>Minor version: Backward-compatible enhancements</li> <li>Patch version: Backward-compatible bug fixes</li> </ul>"},{"location":"reference/openapi/#specification-highlights","title":"Specification Highlights","text":"<ul> <li>Base URL: <code>https://api.chatbot.com/v1</code></li> <li>Authentication: Bearer token via <code>Authorization</code> header</li> <li>Content Type: All requests and responses use <code>application/json</code></li> <li>Rate Limits: 1000 requests per minute per authenticated client</li> </ul>"},{"location":"reference/openapi/#schema-example","title":"Schema Example","text":"<pre><code>openapi: 3.1.0\ninfo:\n  title: ChatBot.com API\n  version: 1.0.0\n  description: API for managing chat archives, users, and entities.\nservers:\n  - url: https://api.chatbot.com/v1\npaths:\n  /archives:\n    get:\n      summary: List chat archives\n      responses:\n        '200':\n          description: List of chat archives\ncomponents:\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\nsecurity:\n  - BearerAuth: []\n</code></pre>"},{"location":"reference/openapi/#tooling-compatibility","title":"Tooling Compatibility","text":"<p>This specification is compatible with:</p> <ul> <li>Postman (import as raw JSON or URL)</li> <li>OpenAPI Generator (generate client SDKs and server stubs)</li> <li>Redoc (static HTML docs generation)</li> </ul>"},{"location":"reference/openapi/#feedback-contributions","title":"Feedback &amp; Contributions","text":"<p>To suggest changes to the OpenAPI spec:</p> <ol> <li>Fork the repository.</li> <li>Edit the OpenAPI file in the <code>openapi/</code> directory.</li> <li>Open a pull request with rationale.</li> </ol> <p>For technical queries or version pinning issues, contact: <code>support@chatbot.com</code>.</p>"}]}